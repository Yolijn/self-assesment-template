[
  {
    "subject": "Templates and styling (HTML/CSS/SASS)",
    "topics": [
      {
        "topic": "design to code",
        "skills": [
          {
            "id": "43ed9874-6da6-450c-b35b-849bb63ed201",
            "summary": "Interpretation of provided design",
            "details": "Extracting design (assets) from design tools like Sketch, Figma, Invision, Zeplin or Photoshop"
          },
          {
            "id": "f298455e-37ab-4d7a-b26f-86525170443c",
            "summary": "estimate work",
            "details": "Estimate how much development work this design would take"
          }
        ]
      },

      {
        "topic": "Accessiblity",
        "skills": [
          {
            "id": "f0341d26-34a6-49f8-825b-8091851875f0",
            "summary": "design accessibility",
            "details": "Validate design for accessibility guidelines and communicate findings"
          },
          {
            "id": "f2bdde8e-3791-4f55-b8da-19db5e102d2d",
            "summary": "Semantic HTML",
            "details": "Use semantic elements like h1-h6, article, abbr, dl, alt, title, table, etc."
          },
          {
            "id": "9a80903f-6d47-481f-b3cd-6ebced0547b8",
            "summary": "attributes",
            "details": "Accessibility for rich web applications: using the role attribute and various aria attributes"
          },
          {
            "id": "80946e05-9b2e-4230-921c-097f4241dd54",
            "summary": "standards",
            "details": "Knowledge of the WCAG guidelines"
          }
        ]
      },
      {
        "topic": "CSS",
        "skills": [
          {
            "id": "5376afa1-7c87-4960-bd16-b0550ec0f229",
            "summary": "Basic CSS",
            "details": "Using old school CSS and modern CSS: from box-sizing, border-collapse to flex and linear-gradient, from ch and em to rem and vw"
          },
          {
            "id": "1b9e73b1-a965-47d2-a86a-970b45fd3af5",
            "summary": "SASS",
            "details": "Optimize code reuse in stylesheets with SASS, by using variables for colors and color functions, nesting selectors, using @mixin, @extends and @include where appropriate"
          },
          {
            "id": "f422f2bc-531f-47e1-806d-57a0e54da83a",
            "summary": "Flat selectors",
            "details": "Using BEM to organise CSS/SASS selectors"
          },
          {
            "id": "ea538d08-4435-452e-86f5-a2c76634d84e",
            "summary": "responsive",
            "details": "Implementing responsive layouts"
          }
        ]
      },
      {
        "topic": "Design System",
        "skills": [
          {
            "id": "851490be-41e0-4dd9-b31c-ae7e2bed71e6",
            "summary": "component library",
            "details": "Creating reusable and stand-alone snippets"
          },
          {
            "id": "a914121c-5f56-45a2-bedc-f68a86eb7924",
            "summary": "design for reuse",
            "details": "Recognizing when a design could be adjusted to fit the existing component library"
          },
          {
            "id": "4a55a3cf-21f3-4613-beb5-85c634bd56a4",
            "summary": "components in storybook",
            "details": "Adding new components or changes to an existing storybook"
          },
          {
            "id": "bc5e6a47-6bfa-4ed3-a3c4-458c80ec7004",
            "summary": "setup storybook",
            "details": "Setting up a new storybook and configuring it to your needs"
          }
        ]
      }
    ]
  },
  {
    "subject": "JavaScript",
    "topics": [
      {
        "topic": "basics",
        "skills": [
          {
            "id": "5b2606b6-a271-4072-8887-350ed3dde180",
            "summary": "clean code",
            "details": "Writing basic JavaScript, preventing code duplication by organizing code into reusable files and functions"
          },
          {
            "id": "075d37d9-50b9-4081-b806-afe2d5c013ab",
            "summary": "Debugging",
            "details": "Efficiently debugging JavaScript, via console.log, breakpoints, stepping through code, writing assertions and looking at the profiler and other web developer tools"
          },
          {
            "id": "527f340f-8061-4384-be76-fa8757710dd1",
            "summary": "ES6",
            "details": "Reading and writing ES6 notation, such as arrow functions, destructuring assignments, object and array spread notation"
          }
        ]
      },
      {
        "topic": "Functional Programming",
        "skills": [
          {
            "id": "042c20df-9cee-4b89-ade5-133a7960c37f",
            "summary": "no side effects",
            "details": "My coding style prevents use of side effects like pushing changes to an (input) array"
          },
          {
            "id": "9c542b2e-113e-4440-ae38-e1c8f4099fd1",
            "summary": "map and filter",
            "details": "Recognize situations where map() and filter() are useful"
          },
          {
            "id": "f17e82d9-575c-4056-b222-61f07c5bb375",
            "summary": "reduce",
            "details": "Recognize when I can use reduce for either outputting a single value, or a complex object or array type"
          }
        ]
      },
      {
        "topic": "advanced",
        "skills": [
          {
            "id": "323048c3-4031-4f70-86cd-3d7ac07c9bcb",
            "summary": "Prototype inheritance and closures",
            "details": "Thorough understanding of JavaScript: prototype and inheritance, call(), apply() and bind(), using closures (and when not to)"
          },
          {
            "id": "48c8c634-b408-40cb-9d67-6be81ad87f6b",
            "summary": "Writing asynchronous code with ES2017",
            "details": "Reading and writing async functions like await, promises, yield etc"
          }
        ]
      },
      {
        "topic": "Typescript",
        "skills": [
          {
            "id": "5ae3ae44-57e8-47ae-ab85-1d81b3f67f3d",
            "summary": "types, interfaces and organisation",
            "details": "Basic TypeScript, using import, interface and class to organize code"
          },
          {
            "id": "44badda8-c77b-4df1-b30e-ba86fa4bd797",
            "summary": "configure Typescript",
            "details": "Setting up Typescript in a project using tsconfig.json"
          },
          {
            "id": "07b08e0f-b6b3-4784-b48d-10507b56ee75",
            "summary": "advanced Typescript",
            "details": "Using advanced TypeScript syntax to make the most of compile-time checks: interface extends, @types modules, type definitions, callback types, conditional types, type inference and type guards"
          }
        ]
      },
      {
        "topic": "unit testing",
        "skills": [
          {
            "id": "71581622-3001-4cf2-a321-12820d3c824c",
            "summary": "test frameworks",
            "details": "Using testing modules such as Jest, Karma or Mocha"
          },
          {
            "id": "6e36aff7-94ec-4f4e-aa7c-72cc9c760063",
            "summary": "testable code",
            "details": "Making code testable, by using named functions, reducing/preventing side effects"
          },
          {
            "id": "88cd7c7e-2072-4c98-a0cb-ba9fb4dbb329",
            "summary": "mocking",
            "details": "Mocking dependencies, external libraries etc."
          }
        ]
      }
    ]
  },
  {
    "subject": "Node.js",
    "topics": [
      {
        "topic": "packages",
        "skills": [
          {
            "id": "d7ef6789-7d52-4f94-b2c7-13e5f74a61f1",
            "summary": "set up NPM project",
            "details": "Initialize a project with npm init"
          },
          {
            "id": "e52f63b9-9cd1-4096-b41e-324bf83d340e",
            "summary": "manage dependencies",
            "details": "Working with package.json files to define dependencies and devDependencies, installing and adding packages using npm install and knowledge of (exact) version pinning"
          },
          {
            "id": "6a25cf41-d581-4399-bb19-ca0a15bcf870",
            "summary": "scripts",
            "details": "Using npm scripts and npx for running (node) scripts and tests"
          },
          {
            "id": "9f61fbd1-9545-4bf5-9bcd-73b8107e8205",
            "summary": "publishing packages",
            "details": "Using npm version and npm publish to publish packages to npmjs.com"
          }
        ]
      },
      {
        "topic": "server",
        "skills": [
          {
            "id": "f36b2468-a194-4b0e-82b2-2879f5d9ea44",
            "summary": "Basic routing with Express",
            "details": "Creating HTTP endpoints, using GET, POST, PUT, DELETE when appropriate, setting the correct Content-Type and cache headers for both static and dynamic pages"
          },
          {
            "id": "e9b5a4e3-0eb7-4e49-954d-09384d343e7a",
            "summary": "websockets",
            "details": "Creating websocket server for communication with websocket connections from the browser"
          },
          {
            "id": "af84d30e-ed7b-4505-b7e7-b8e6335af9c4",
            "summary": "User authentication",
            "details": "Implement user authentication and managing permissions for accessing private URLs with either custom authentication or OAuth SSO"
          },
          {
            "id": "a7c0fce1-ab73-4249-994e-f6a5e174680c",
            "summary": "Webpack",
            "details": "Configuring WebPack to quickly build code using a watcher for development, and creating minified builds for production"
          }
        ]
      }
    ]
  },
  {
    "subject": "Angular",
    "topics": [
      {
        "topic": "RxJS",
        "skills": [
          {
            "id": "2d004fa2-84d7-4b29-b779-d0e3eab560d3",
            "summary": "Observables and Subjects",
            "details": "Creating observables and subjects and understanding the difference between them"
          },
          {
            "id": "2477c7a8-59ac-42de-bcc9-750bbd171621",
            "summary": "combining data sources",
            "details": "Using multiple data sources in RxJS using withLatestFrom and combineLatest, conversion from Promises, working with nested observables using switchMap and mergeAll"
          },
          {
            "id": "5bc00d36-1c32-4166-a765-a2b44d7c86fd",
            "summary": "sharing data sources",
            "details": "Advanced understanding of RxJS: hot, cold and warm observables, know when to use share(), publish() and replay()"
          }
        ]
      },
      {
        "topic": "Realtime templates",
        "skills": [
          {
            "id": "fab78f1b-ee4a-45c8-8e2f-e42a251dff43",
            "summary": "cleanup subscriptions",
            "details": "Developing observable chains without using '.subscribe()' but '| async' instead"
          },
          {
            "id": "4e3a16e3-3ed8-406c-9458-a4647bfe1283",
            "summary": "performance on changes",
            "details": "Writing templates that perform well with frequent updates, using 'trackBy', understanding the impact of Angular change detection and being mindful of nesting 'ngFor' and knowledge of change detection strategies"
          }
        ]
      },
      {
        "topic": "templates",
        "skills": [
          {
            "id": "727d898a-7a8a-4ae7-946f-5105322a8438",
            "summary": "pipes",
            "details": "Using default pipes to transform template input"
          },
          {
            "id": "9ee518f3-1dc3-4fca-995d-cbf39dd0b218",
            "summary": "custom pipes",
            "details": "Creating custom pipes and extending default pipes"
          }
        ]
      },
      {
        "topic": "routing",
        "skills": [
          {
            "id": "2bf192ab-4fa2-48c4-b859-750257cfc6e2",
            "summary": "route guards",
            "details": "Using route guards for feature flags and access management"
          }
        ]
      },
      {
        "topic": "Modules",
        "skills": [
          {
            "id": "f36df412-4ecb-4869-80ba-7bef1ad8a720",
            "summary": "structure of modules",
            "details": "Basic knowledge of imports, exports, providers"
          },
          {
            "id": "bdfb967e-3d48-4027-8d4b-5645f9775e6a",
            "summary": "code splitting",
            "details": "Usage of submodules and child routing"
          }
        ]
      },
      {
        "topic": "CLI",
        "skills": [
          {
            "id": "136b1ec0-1393-46f3-a5c7-5d4d2373c6a7",
            "summary": "new project",
            "details": "Generate a new project with Angular CLI"
          },
          {
            "id": "10f4660e-aeb5-4264-99d6-f6c43346d864",
            "summary": "custom configuration",
            "details": "Customizing angular.json"
          },
          {
            "id": "4192bccc-7b01-4bac-ac9d-44754ca74785",
            "summary": "extend project",
            "details": "Create components, modules, directives, pipes etc."
          }
        ]
      },
      {
        "topic": "Forms",
        "skills": [
          {
            "id": "de39b14c-232f-41f4-8884-0090d7b728b0",
            "summary": "basic forms",
            "details": "Basic Angular forms: using select, checkboxes, radio buttons, text input, validation, dirty checking and form resets"
          },
          {
            "id": "ab68c3e6-cdd4-48e1-b677-18ac51f5e347",
            "summary": "advanced forms",
            "details": "Advanced Angular forms: generating forms based on observable data"
          }
        ]
      },
      {
        "topic": "state management",
        "skills": [
          {
            "id": "babb8d58-55c8-45be-a341-fc276234824f",
            "summary": "NgRX",
            "details": "State management with NgRX"
          }
        ]
      },
      {
        "topic": "testing",
        "skills": [
          {
            "id": "a97ead2f-07ca-4e8f-a970-19bb0a7304cd",
            "summary": "testbed",
            "details": "Testing components and services with Angular TestBed"
          }
        ]
      }
    ]
  },
  {
    "subject": "Test automation",
    "topics": [
      {
        "topic": "workflow",
        "skills": [
          {
            "id": "9c7ca942-bd50-4af4-a5f4-9bdd49186783",
            "summary": "TDD and BDD",
            "details": "Experience with Behavior or Test driven developent"
          }
        ]
      },
      {
        "topic": "DOM selectors",
        "skills": [
          {
            "id": "d4e3b887-7156-4180-8795-47113190dd29",
            "summary": "Basic selectors",
            "details": "Writing basic CSS selectors from scratch, selecting class names, element names and IDs"
          },
          {
            "id": "4494e2c6-4d83-4e9e-bd67-90fbc43c4bd3",
            "summary": "Advanced selectors",
            "details": "Writing advanced CSS selectors from scratch, creating custom attributes, selecting existing attributes, attribute values, and elements that occur in a specific order"
          },
          {
            "id": "94c77812-012c-4eb0-b8e9-4f6765ba06c4",
            "summary": "Advanced queries",
            "details": "Writing advanced XPath queries, finding elements that contain a specific text, finding elements not only via their container but also via following-sibling, ancestor and parent"
          }
        ]
      },
      {
        "topic": "end-to-end testing",
        "skills": [
          {
            "id": "d7d429e4-aefb-448a-91a8-e37ce5bd9ee8",
            "summary": "test frameworks",
            "details": "Run tests in the browser with frameworks like Cypress or Nightwatch"
          },
          {
            "id": "ab11f80d-4a44-4323-9fce-688fb139e576",
            "summary": "reliable interaction",
            "details": "Configuring the tests so the interaction with the application is reliable while looking for or clicking on elements"
          }
        ]
      },
      {
        "topic": "scenarios and data",
        "skills": [
          {
            "id": "7355073a-2601-41d8-bd6a-a71413e697eb",
            "summary": "mock data",
            "details": "Designing a varied set of mock data to test an application"
          },
          {
            "id": "e1ab5550-23f9-4bd0-939d-064f81479a17",
            "summary": "write scenarios",
            "details": "Writing scenarios in feature files using Gherkin statements"
          },
          {
            "id": "f2a08b0a-16cc-41c3-882e-ef122f894dc8",
            "summary": "implement scenarios",
            "details": "Implement feature files in a unit or end-to-end test framework"
          }
        ]
      },
      {
        "topic": "test coverage",
        "skills": [
          {
            "id": "5861f2af-4030-4789-930f-49d6e60f254b",
            "summary": "code coverage",
            "details": "Measure and maintain code coverage of automated tests"
          }
        ]
      },
      {
        "topic": "layout testing",
        "skills": [
          {
            "id": "bcc5e9ca-71cc-4325-8422-3325cc6fcba2",
            "summary": "visual testing",
            "details": "Automate visual testing of the layout. For example automated regression testing using screenshot comparisons"
          }
        ]
      },
      {
        "topic": "testing as part of CD",
        "skills": [
          {
            "id": "f3d0e92b-51d4-4f09-af9a-12c9bbfcc239",
            "summary": "Cloud services",
            "details": "Running end-to-end tests using cloud services such as Sauce Labs and BrowserStack"
          }
        ]
      }
    ]
  },
  {
    "subject": "Git workflow",
    "topics": [
      {
        "topic": "Pull requests",
        "skills": [
          {
            "id": "698fa508-20dd-4e6c-afbc-8f911e5f4376",
            "summary": "creating pull or merge requests",
            "details": "Use GitHub or GitLab to collaborate on code, by creating pull requests for proposed changes"
          },
          {
            "id": "fb954e99-22eb-4d09-8303-997c2f459a9f",
            "summary": "reviews",
            "details": "Review proposed changes of others on for example GitHub, using pull request reviews"
          }
        ]
      },
      {
        "topic": "branches",
        "skills": [
          {
            "id": "8bca6358-7d92-4b0f-aaaa-a74e33f5254e",
            "summary": "using branches",
            "details": "Using various branches to separately develop new features and bug fixes, submitting them to the master branch only when the code is done"
          },
          {
            "id": "821c3ad5-a5bf-4ec3-8795-ac538859a89d",
            "summary": "cherry-pick commits",
            "details": "Cherry-picking commits from other branches"
          },
          {
            "id": "dba8d503-ff1f-48dc-927c-48a610e97bd5",
            "summary": "merge",
            "details": "Using merge to combine the recent code of others into another branch"
          },
          {
            "id": "757aec57-77bf-4cb5-a7ce-e75f590dad75",
            "summary": "merge vs rebase",
            "details": "knowing the difference between merge and rebase and how they shape commit history"
          },
          {
            "id": "ca460a10-5928-425a-ac40-b893596201b7",
            "summary": "rebase",
            "details": "Using rebase to combine the recent code of others into another branch"
          }
        ]
      },
      {
        "topic": "commits",
        "skills": [
          {
            "id": "0be86417-ef56-4430-97b4-d5335f01df38",
            "summary": "atomic commits",
            "details": "Creating atomic commits for each task or change separately to enable in depth reviews and improve git blame"
          },
          {
            "id": "634ff6fa-da18-421d-a8db-60248361efaf",
            "summary": "interactive rebase",
            "details": "Using interactive rebase to clean up commit histor"
          }
        ]
      },
      {
        "topic": "commit hooks",
        "skills": [
          {
            "id": "2bcf4e5e-38eb-4868-884a-d7c38a2225eb",
            "summary": "linting",
            "details": "Running linting and other automated tests as pre-commit hooks"
          },
          {
            "id": "07383603-9574-4bbf-bbd6-ed1b8ba767f5",
            "summary": "test automation",
            "details": "Running automated tests using GitHub commit hooks, for example using Travis CI"
          }
        ]
      }
    ]
  },
  {
    "subject": "Data",
    "topics": [
      {
        "topic": "Databases",
        "skills": [
          {
            "id": "7fa4320a-d030-46a8-839e-3ffe34e7b150",
            "summary": "SQL",
            "details": "Working with SQL databases like PostgreSQL and SQL queries"
          },
          {
            "id": "daa9be90-7a48-4d71-afbf-53822a32b912",
            "summary": "NoSQL",
            "details": "Working with NoSQL databases like MongoDB or CouchDB"
          },
          {
            "id": "d791ed4f-535e-4cc0-b36a-9abac30d2e02",
            "summary": "Event based",
            "details": "Working with Event Stores like Kafka"
          }
        ]
      },
      {
        "topic": "Data design",
        "skills": [
          {
            "id": "114729be-3b44-47d2-9d16-ef9ada1cd15d",
            "summary": "validating JSON",
            "details": "Defining a JSON schema using OpenAPI to validate JSON messages"
          },
          {
            "id": "f84111cc-6d77-4c7e-b226-0e6327950547",
            "summary": "data based on ux design",
            "details": "Design the requirements for a data format based on UX designs or wireframes"
          },
          {
            "id": "5a3d317a-4b0e-4391-ad34-02b5acd8633a",
            "summary": "interpret data",
            "details": "Reading data files (for example XML or JSON), knowing what data to extract for further use in an application"
          }
        ]
      },
      {
        "topic": "API",
        "skills": [
          {
            "id": "c7a0d0e1-33de-497f-8474-a4f7f21088ce",
            "summary": "migration",
            "details": "Migration of an existing data set to a new version of the data format"
          },
          {
            "id": "d9d02f5a-d47b-41f5-b21b-f7b09ac3c1e1",
            "summary": "semantic versioning",
            "details": "Knowing how to use SemVer and how to communicate breaking changes using it"
          }
        ]
      }
    ]
  },
  {
    "subject": "DevOps",
    "topics": [
      {
        "topic": "Containers",
        "skills": [
          {
            "id": "26768031-8fee-46da-a1eb-f758c990dd16",
            "summary": "docker compose",
            "details": "Running an application stack with Docker Compose"
          },
          {
            "id": "587d52ea-115e-43a7-b82f-1329aff93e75",
            "summary": "setup",
            "details": "Setting up an application from front to back to data with docker containers"
          },
          {
            "id": "b296ef31-924f-4186-912f-a6510ea91c55",
            "summary": "debugging",
            "details": "Debugging running containers with 'docker ps', 'docker logs' and 'docker exec'"
          },
          {
            "id": "3c55e336-3234-4fa3-b49f-a183c4a155b7",
            "summary": "kubernetes",
            "details": "using Kubernetes or Openshift for automated and scalable container deployments"
          }
        ]
      },
      {
        "topic": "Continuous Integration",
        "skills": [
          {
            "id": "5fea0768-ca5f-4668-9d29-2b7a72936d17",
            "summary": "linters and commit hooks",
            "details": "Configure linting tools and enforce a consistent coding style using continuous integration"
          }
        ]
      },
      {
        "topic": "Security and certificates",
        "skills": [
          {
            "id": "7d6920ab-8d88-40fb-95d5-819a53926ec0",
            "summary": "SSL",
            "details": "Managing of certificates and ensuring connections are encrypted using SSL"
          },
          {
            "id": "15eff745-e80c-4f59-9241-3a5cda8f3beb",
            "summary": "System and networking",
            "details": "Knowledge of RHEL/Centos Linux 7 systems and network security (engineering and auditing)"
          }
        ]
      },
      {
        "topic": "monitoring",
        "skills": [
          {
            "id": "bc32f444-ece5-463b-ac99-5ea011990e86",
            "summary": "monitoring application state",
            "details": "Logging and monitoring of systems, application state and events, with tools and (Slack) plugins"
          }
        ]
      }
    ]
  }
]
